"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var react_redux_1 = require("react-redux");
var point_1 = require("../../utils/geometry/point");
var droppable_1 = require("../draggable/droppable");
var connection_preview_1 = require("./../connectable/connection-preview");
var uml_element_component_1 = require("./../uml-element/uml-element-component");
var canvas_styles_1 = require("./canvas-styles");
var enhance = react_redux_1.connect(function (state) { return ({
    diagram: state.diagram,
    isStatic: state.editor.readonly,
}); }, null, null, { forwardRef: true });
var CanvasComponent = /** @class */ (function (_super) {
    tslib_1.__extends(CanvasComponent, _super);
    function CanvasComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.layer = react_1.createRef();
        _this.origin = function () {
            if (!_this.layer.current) {
                return new point_1.Point();
            }
            var canvasBounds = _this.layer.current.getBoundingClientRect();
            return new point_1.Point(canvasBounds.left + canvasBounds.width / 2, canvasBounds.top + canvasBounds.height / 2);
        };
        _this.snap = function (point) {
            var origin = _this.origin();
            return point.subtract(origin).round().add(origin);
        };
        return _this;
    }
    CanvasComponent.prototype.render = function () {
        var _a = this.props, diagram = _a.diagram, isStatic = _a.isStatic;
        return (react_1.default.createElement(droppable_1.Droppable, null,
            react_1.default.createElement(canvas_styles_1.CanvasContainer, { width: diagram.bounds.width, height: diagram.bounds.height, isStatic: isStatic, ref: this.layer }, this.layer.current && (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement("svg", { x: "50%", y: "50%" },
                    diagram.ownedElements.map(function (element) { return (react_1.default.createElement(uml_element_component_1.UMLElementComponent, { key: element, id: element })); }),
                    diagram.ownedRelationships.map(function (relationship) { return (react_1.default.createElement(uml_element_component_1.UMLElementComponent, { key: relationship, id: relationship })); }),
                    react_1.default.createElement(connection_preview_1.ConnectionPreview, null)))))));
    };
    return CanvasComponent;
}(react_1.Component));
exports.CanvasComponent = CanvasComponent;
exports.Canvas = enhance(CanvasComponent);
//# sourceMappingURL=canvas.js.map