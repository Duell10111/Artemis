"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var react_redux_1 = require("react-redux");
var redux_1 = require("redux");
var redux_saga_1 = tslib_1.__importDefault(require("redux-saga"));
var redux_thunk_1 = tslib_1.__importDefault(require("redux-thunk"));
var layouter_repository_1 = require("../../services/layouter/layouter-repository");
var reducer_1 = require("../../services/reducer");
var saga_1 = require("../../services/saga");
var undo_reducer_1 = require("../../services/undo/undo-reducer");
var with_canvas_1 = require("../canvas/with-canvas");
var getInitialState = function (initialState, layer) {
    if (initialState === void 0) { initialState = {}; }
    if (layer === void 0) { layer = null; }
    var reducer = undo_reducer_1.undoable(redux_1.combineReducers(reducer_1.reducers));
    var sagaMiddleware = redux_saga_1.default({ context: { layer: layer } });
    var middleware = redux_1.applyMiddleware(redux_thunk_1.default, sagaMiddleware);
    var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || redux_1.compose;
    var enhancer = composeEnhancers(middleware);
    var store = redux_1.createStore(reducer, initialState, enhancer);
    if (layer) {
        sagaMiddleware.run(saga_1.saga);
        store.dispatch(layouter_repository_1.LayouterRepository.layout());
    }
    return { store: store };
};
var ModelStore = /** @class */ (function (_super) {
    tslib_1.__extends(ModelStore, _super);
    function ModelStore() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = getInitialState(_this.props.initialState, _this.props.canvas);
        return _this;
    }
    ModelStore.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.canvas !== this.props.canvas) {
            var state = getInitialState(this.props.initialState, this.props.canvas);
            this.setState(state);
        }
    };
    ModelStore.prototype.render = function () {
        return react_1.default.createElement(react_redux_1.Provider, { store: this.state.store }, this.props.children);
    };
    return ModelStore;
}(react_1.Component));
exports.ModelStore = ModelStore;
exports.StoreProvider = with_canvas_1.withCanvas(ModelStore);
//# sourceMappingURL=model-store.js.map