"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var react_dom_1 = require("react-dom");
var with_draggable_1 = require("./with-draggable");
var enhance = with_draggable_1.withDraggable;
var DraggableComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DraggableComponent, _super);
    function DraggableComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onDragStart = function (event) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var dropEvent, error_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.props.onDragStart(event)];
                    case 1:
                        dropEvent = _a.sent();
                        if (this.props.onDrop) {
                            this.props.onDrop(dropEvent);
                        }
                        return [3 /*break*/, 3];
                    case 2:
                        error_1 = _a.sent();
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        }); };
        return _this;
    }
    DraggableComponent.prototype.componentDidMount = function () {
        var node = react_dom_1.findDOMNode(this);
        node.addEventListener('pointerdown', this.onDragStart);
    };
    DraggableComponent.prototype.componentWillUnmount = function () {
        var node = react_dom_1.findDOMNode(this);
        node.removeEventListener('pointerdown', this.onDragStart);
    };
    DraggableComponent.prototype.render = function () {
        return this.props.children;
    };
    return DraggableComponent;
}(react_1.Component));
exports.Draggable = enhance(DraggableComponent);
//# sourceMappingURL=draggable.js.map