import React, { Component } from 'react';
import { UMLElementType } from '../../packages/uml-element-type';
import { UMLRelationshipType } from '../../packages/uml-relationship-type';
import { ApollonMode, ApollonView } from '../../services/editor/editor-types';
import { UMLElementFeatures } from '../../services/uml-element/uml-element-features';
import { UMLElementComponentProps } from './uml-element-component-props';
declare type StateProps = {
    features: UMLElementFeatures;
    type: UMLElementType | UMLRelationshipType;
    readonly: boolean;
    view: ApollonView;
    mode: ApollonMode;
};
declare type DispatchProps = {};
declare type Props = UMLElementComponentProps & StateProps & DispatchProps;
declare const getInitialState: (props: Props) => {
    component: React.ComponentType<UMLElementComponentProps & {
        child: React.ComponentClass<UMLElementComponentProps, any>;
    }>;
};
declare type State = ReturnType<typeof getInitialState>;
declare class UMLElementComponentC extends Component<Props, State> {
    state: {
        component: React.ComponentType<UMLElementComponentProps & {
            child: React.ComponentClass<UMLElementComponentProps, any>;
        }>;
    };
    componentDidUpdate(prevProps: Props): void;
    render(): JSX.Element;
}
export declare const UMLElementComponent: import("react-redux").ConnectedComponentClass<typeof UMLElementComponentC, Pick<Props, "id"> & UMLElementComponentProps>;
export {};
