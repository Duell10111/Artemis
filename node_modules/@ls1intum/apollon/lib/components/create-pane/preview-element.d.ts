import React, { Component } from 'react';
import { UMLElement } from '../../services/uml-element/uml-element';
declare type Props = {
    element: UMLElement;
    create: (element: UMLElement, owner?: string) => void;
};
export declare const Preview: import("styled-components").StyledComponent<React.ComponentClass<import("../uml-element/uml-element-component-props").UMLElementComponentProps, any>, {
    color: {
        primary: string;
        secondary: string;
        white: string;
        gray100: string;
        gray200: string;
        gray300: string;
        gray400: string;
        gray500: string;
        gray600: string;
        gray700: string;
        gray800: string;
        gray900: string;
        black: string;
    };
    font: {
        color: string;
        family: string;
        size: number;
    };
    interactive: {
        normal: string;
        hovered: string;
    };
}, {
    child: React.ComponentClass<{
        child?: React.ComponentClass<import("../uml-element/uml-element-component-props").UMLElementComponentProps, any> | undefined;
    } & import("../uml-element/uml-element-component-props").UMLElementComponentProps & React.SVGProps<SVGSVGElement>, any>;
}, "child">;
export declare class PreviewElement extends Component<Props> {
    render(): JSX.Element;
    private onDrop;
}
export {};
