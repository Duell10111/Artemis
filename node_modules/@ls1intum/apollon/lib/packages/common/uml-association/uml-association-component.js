"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var uml_element_port_1 = require("../../../services/uml-element/uml-element-port");
var point_1 = require("../../../utils/geometry/point");
var uml_class_diagram_1 = require("../../uml-class-diagram");
var Marker = {
    Arrow: function (id) { return (react_1.default.createElement("marker", { id: id, viewBox: "0 0 30 30", markerWidth: "22", markerHeight: "30", refX: "30", refY: "15", orient: "auto", markerUnits: "strokeWidth", strokeDasharray: "1,0" },
        react_1.default.createElement("path", { d: "M0,29 L30,15 L0,1", fill: "none", stroke: "black" }))); },
    Rhombus: function (id) { return (react_1.default.createElement("marker", { id: id, viewBox: "0 0 30 30", markerWidth: "30", markerHeight: "30", refX: "30", refY: "15", orient: "auto", markerUnits: "strokeWidth" },
        react_1.default.createElement("path", { d: "M0,15 L15,22 L30,15 L15,8 z", fill: "white", stroke: "black" }))); },
    RhombusFilled: function (id) { return (react_1.default.createElement("marker", { id: id, viewBox: "0 0 30 30", markerWidth: "30", markerHeight: "30", refX: "30", refY: "15", orient: "auto", markerUnits: "strokeWidth" },
        react_1.default.createElement("path", { d: "M0,15 L15,22 L30,15 L15,8 z", fill: "black" }))); },
    Triangle: function (id) { return (react_1.default.createElement("marker", { id: id, viewBox: "0 0 30 30", markerWidth: "22", markerHeight: "30", refX: "30", refY: "15", orient: "auto", markerUnits: "strokeWidth", strokeDasharray: "1,0" },
        react_1.default.createElement("path", { d: "M0,1 L0,29 L30,15 z", fill: "white", stroke: "black" }))); },
};
exports.UMLAssociationComponent = function (_a) {
    var element = _a.element;
    var marker = (function (type) {
        switch (type) {
            case uml_class_diagram_1.ClassRelationshipType.ClassDependency:
            case uml_class_diagram_1.ClassRelationshipType.ClassUnidirectional:
                return Marker.Arrow;
            case uml_class_diagram_1.ClassRelationshipType.ClassAggregation:
                return Marker.Rhombus;
            case uml_class_diagram_1.ClassRelationshipType.ClassComposition:
                return Marker.RhombusFilled;
            case uml_class_diagram_1.ClassRelationshipType.ClassInheritance:
            case uml_class_diagram_1.ClassRelationshipType.ClassRealization:
                return Marker.Triangle;
        }
    })(element.type);
    var stroke = (function (type) {
        switch (type) {
            case uml_class_diagram_1.ClassRelationshipType.ClassDependency:
            case uml_class_diagram_1.ClassRelationshipType.ClassRealization:
                return 7;
        }
    })(element.type);
    var computeTextPosition = function (alignmentPath, hasMarker) {
        if (hasMarker === void 0) { hasMarker = false; }
        var distance = hasMarker ? 31 : 8;
        if (alignmentPath.length < 2)
            return new point_1.Point();
        var vector = alignmentPath[1].subtract(alignmentPath[0]);
        return alignmentPath[0].add(vector.normalize().scale(distance));
    };
    var layoutText = function (location, position) {
        switch (location) {
            case uml_element_port_1.Direction.Up:
                return {
                    dx: position === 'TOP' ? -5 : 5,
                    textAnchor: position === 'TOP' ? 'end' : 'start',
                };
            case uml_element_port_1.Direction.Right:
                return {
                    dy: position === 'TOP' ? -10 : 21,
                    textAnchor: 'start',
                };
            case uml_element_port_1.Direction.Down:
                return {
                    dx: position === 'TOP' ? -5 : 5,
                    dy: 10,
                    textAnchor: position === 'TOP' ? 'end' : 'start',
                };
            case uml_element_port_1.Direction.Left:
                return {
                    dy: position === 'TOP' ? -10 : 21,
                    textAnchor: 'end',
                };
        }
    };
    var path = element.path.map(function (point) { return new point_1.Point(point.x, point.y); });
    var source = computeTextPosition(path);
    var target = computeTextPosition(path.reverse(), !!marker);
    var id = "marker-" + element.id;
    return (react_1.default.createElement("g", null,
        marker && marker(id),
        react_1.default.createElement("polyline", { points: element.path.map(function (point) { return point.x + " " + point.y; }).join(','), stroke: "black", fill: "none", strokeWidth: 1, markerEnd: "url(#" + id + ")", strokeDasharray: stroke }),
        react_1.default.createElement("text", tslib_1.__assign({ x: source.x, y: source.y }, layoutText(element.source.direction, 'BOTTOM'), { pointerEvents: "none" }), element.source.multiplicity),
        react_1.default.createElement("text", tslib_1.__assign({ x: target.x, y: target.y }, layoutText(element.target.direction, 'BOTTOM'), { pointerEvents: "none" }), element.target.multiplicity),
        react_1.default.createElement("text", tslib_1.__assign({ x: source.x, y: source.y }, layoutText(element.source.direction, 'TOP'), { pointerEvents: "none" }), element.source.role),
        react_1.default.createElement("text", tslib_1.__assign({ x: target.x, y: target.y }, layoutText(element.target.direction, 'TOP'), { pointerEvents: "none" }), element.target.role)));
};
//# sourceMappingURL=uml-association-component.js.map