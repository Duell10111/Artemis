"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var point_1 = require("../../../utils/geometry/point");
exports.UMLUseCaseAssociationComponent = function (_a) {
    var element = _a.element;
    var _b = tslib_1.__read(element.path.map(function (p) { return new point_1.Point(p.x, p.y); }), 2), start = _b[0], end = _b[1];
    var line = end.subtract(start);
    var norm = line.normalize();
    var center = start.add(norm.scale(0.5 * line.length));
    return (react_1.default.createElement("g", null,
        react_1.default.createElement("path", { id: "textpath-" + element.id, d: "\n        M " + start.x + " " + (start.y - 10) + "\n        L " + end.x + " " + (end.y - 10) + "\n    " }),
        react_1.default.createElement("text", { dominantBaseline: "middle", textAnchor: "middle", fontWeight: "bold", transform: norm.x < 0
                ? "\n            translate(" + center.x + ", " + center.y + ")\n            rotate(180)\n            translate(" + -center.x + ", " + -center.y + ")\n          "
                : undefined, pointerEvents: "none" },
            react_1.default.createElement("textPath", { xlinkHref: "#textpath-" + element.id, startOffset: "50%" }, element.name)),
        react_1.default.createElement("polyline", { points: element.path.map(function (point) { return point.x + " " + point.y; }).join(','), stroke: "black", fill: "none", strokeWidth: 1 })));
};
//# sourceMappingURL=uml-use-case-association-component.js.map