"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var point_1 = require("../../../utils/geometry/point");
var Arrow = function (_a) {
    var id = _a.id, props = tslib_1.__rest(_a, ["id"]);
    return (react_1.default.createElement("g", null,
        react_1.default.createElement("marker", { id: "marker-" + id, viewBox: "0 0 30 30", markerWidth: "22", markerHeight: "30", refX: "30", refY: "15", orient: "auto", markerUnits: "strokeWidth", strokeDasharray: "1,0" },
            react_1.default.createElement("path", { d: "M0,29 L30,15 L0,1", fill: "none", stroke: "black" })),
        react_1.default.createElement("path", tslib_1.__assign({}, props, { stroke: "black", strokeDasharray: 7, markerEnd: "url(#marker-" + id + ")" }))));
};
exports.UMLUseCaseExtendComponent = function (_a) {
    var element = _a.element;
    var _b = tslib_1.__read(element.path.map(function (p) { return new point_1.Point(p.x, p.y); }), 2), start = _b[0], end = _b[1];
    var line = end.subtract(start);
    if (line.length <= 100) {
        return react_1.default.createElement(Arrow, { id: element.id, d: "M " + start.x + " " + start.y + " L " + end.x + " " + end.y });
    }
    var norm = line.normalize();
    var center = start.add(norm.scale(0.5 * line.length));
    var startSection = start.add(norm.scale(0.5 * line.length - 40));
    var endSection = end.subtract(norm.scale(0.5 * line.length - 40));
    return (react_1.default.createElement("g", null,
        react_1.default.createElement(Arrow, { id: element.id, d: "\n          M " + start.x + " " + start.y + " L " + startSection.x + " " + startSection.y + "\n          M " + endSection.x + " " + endSection.y + " L " + end.x + " " + end.y + "\n        " }),
        react_1.default.createElement("path", { id: "textpath-" + element.id, d: "\n          M " + startSection.x + " " + startSection.y + "\n          L " + endSection.x + " " + endSection.y + "\n        " }),
        react_1.default.createElement("text", { dominantBaseline: "middle", textAnchor: "middle", fontWeight: "bold", transform: norm.x < 0
                ? "\n              translate(" + center.x + ", " + center.y + ")\n              rotate(180)\n              translate(" + -center.x + ", " + -center.y + ")\n            "
                : undefined, pointerEvents: "none" },
            react_1.default.createElement("textPath", { xlinkHref: "#textpath-" + element.id, startOffset: "50%" }, "\u00ABextend\u00BB"))));
};
//# sourceMappingURL=uml-use-case-extend-component.js.map