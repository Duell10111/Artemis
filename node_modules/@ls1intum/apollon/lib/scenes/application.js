"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var canvas_1 = require("../components/canvas/canvas");
var canvas_context_1 = require("../components/canvas/canvas-context");
var container_1 = require("../components/canvas/container");
var keyboard_eventlistener_1 = require("../components/canvas/keyboard-eventlistener");
var draggable_layer_1 = require("../components/draggable/draggable-layer");
var i18n_provider_1 = require("../components/i18n/i18n-provider");
var sidebar_component_1 = require("../components/sidebar/sidebar-component");
var model_store_1 = require("../components/store/model-store");
var theme_1 = require("../components/theme/theme");
var update_pane_1 = require("../components/update-pane/update-pane");
var application_styles_1 = require("./application-styles");
var root_context_1 = require("../components/root/root-context");
var initialState = Object.freeze({
    canvas: null,
    root: null,
});
var Application = /** @class */ (function (_super) {
    tslib_1.__extends(Application, _super);
    function Application() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = initialState;
        _this.store = react_1.createRef();
        _this.setCanvas = function (ref) {
            if (ref && ref.layer.current) {
                _this.setState({ canvas: tslib_1.__assign(tslib_1.__assign({}, ref), { layer: ref.layer.current }) });
            }
        };
        _this.setLayout = function (ref) {
            if (ref) {
                _this.setState({ root: ref });
            }
        };
        return _this;
    }
    Application.prototype.render = function () {
        var canvasContext = this.state.canvas ? { canvas: this.state.canvas } : null;
        var rootContext = this.state.root ? { root: this.state.root } : null;
        return (react_1.default.createElement(canvas_context_1.CanvasProvider, { value: canvasContext },
            react_1.default.createElement(root_context_1.RootProvider, { value: rootContext },
                react_1.default.createElement(model_store_1.StoreProvider, { ref: this.store, initialState: this.props.state },
                    react_1.default.createElement(i18n_provider_1.I18nProvider, { locale: this.props.locale },
                        react_1.default.createElement(theme_1.Theme, { styles: this.props.styles },
                            react_1.default.createElement(application_styles_1.Layout, { className: "apollon-editor", ref: this.setLayout }, rootContext && (react_1.default.createElement(draggable_layer_1.DraggableLayer, null,
                                react_1.default.createElement(container_1.Editor, null,
                                    react_1.default.createElement(canvas_1.Canvas, { ref: this.setCanvas })),
                                canvasContext && (react_1.default.createElement(react_1.default.Fragment, null,
                                    react_1.default.createElement(sidebar_component_1.Sidebar, null),
                                    react_1.default.createElement(update_pane_1.UpdatePane, null),
                                    react_1.default.createElement(keyboard_eventlistener_1.KeyboardEventListener, null))))))))))));
    };
    return Application;
}(react_1.default.Component));
exports.Application = Application;
//# sourceMappingURL=application.js.map