import { Component, CSSProperties, SVGProps } from 'react';
declare const defaultProps: Readonly<{
    x: number;
    y: number;
    dx: number;
    dy: number;
    angle: number;
    width: number | undefined;
    height: number | undefined;
    lineHeight: number;
    capHeight: number;
    scaleToFit: boolean;
    textAnchor: "end" | "middle" | "inherit" | "start";
    verticalAnchor: "end" | "middle" | "start";
}>;
declare const initialState: Readonly<{
    wordsByLines: {
        words: string[];
        width: number;
    }[];
}>;
declare type Props = {
    children: string;
} & SVGProps<SVGTextElement> & typeof defaultProps;
declare type State = typeof initialState;
export declare class Multiline extends Component<Props, State> {
    static defaultProps: Readonly<{
        x: number;
        y: number;
        dx: number;
        dy: number;
        angle: number;
        width: number | undefined;
        height: number | undefined;
        lineHeight: number;
        capHeight: number;
        scaleToFit: boolean;
        textAnchor: "end" | "middle" | "inherit" | "start";
        verticalAnchor: "end" | "middle" | "start";
    }>;
    state: Readonly<{
        wordsByLines: {
            words: string[];
            width: number;
        }[];
    }>;
    spaceWidth: number;
    wordsWithComputedWidth: {
        word: string;
        width: number;
    }[];
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: Readonly<Props>): void;
    calculateWordWidths: (props: Readonly<Props>) => {
        wordsWithComputedWidth: {
            word: string;
            width: number;
        }[];
        spaceWidth: number;
    } | null;
    getStringWidth(str: string, style?: CSSProperties): number;
    updateWordsByLines(props: Readonly<Props>, needCalculate: boolean): void;
    updateWordsWithoutCalculate(props: Readonly<Props>): void;
    calculateWordsByLines(wordsWithComputedWidth: {
        word: string;
        width: number;
    }[], spaceWidth: number, lineWidth?: number): {
        words: string[];
        width: number;
    }[];
    render(): JSX.Element;
}
export {};
