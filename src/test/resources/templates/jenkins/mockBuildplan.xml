<?xml version="1.1" encoding="UTF-8"?>
<project>
    <actions/>
    <description/>
    <keepDependencies>false</keepDependencies>
    <properties>
        <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.13">
            <gitLabConnection>Artemis Gitlab</gitLabConnection>
        </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    </properties>
    <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM" plugin="multiple-scms@0.6">
        <scms>
            <hudson.plugins.git.GitSCM plugin="git@4.2.2">
                <configVersion>2</configVersion>
                <userRemoteConfigs>
                    <hudson.plugins.git.UserRemoteConfig>
                        <url>https://bitbucket.ase.in.tum.de/MYLOCALCOURSECEXERCISE/mylocalcoursecexercise-tests.git</url>
                        <credentialsId>credentialsKey</credentialsId>
                    </hudson.plugins.git.UserRemoteConfig>
                </userRemoteConfigs>
                <branches>
                    <hudson.plugins.git.BranchSpec>
                        <name>*/master</name>
                    </hudson.plugins.git.BranchSpec>
                </branches>
                <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
                <submoduleCfg class="list"/>
                <extensions>
                    <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
                        <relativeTargetDir>tests</relativeTargetDir>
                    </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
                </extensions>
            </hudson.plugins.git.GitSCM>
            <hudson.plugins.git.GitSCM plugin="git@4.2.2">
                <configVersion>2</configVersion>
                <userRemoteConfigs>
                    <hudson.plugins.git.UserRemoteConfig>
                        <url>https://bitbucket.ase.in.tum.de/MYLOCALCOURSECEXERCISE/mylocalcoursecexercise-solution.git</url>
                        <credentialsId>credentialsKey</credentialsId>
                    </hudson.plugins.git.UserRemoteConfig>
                </userRemoteConfigs>
                <branches>
                    <hudson.plugins.git.BranchSpec>
                        <name>*/master</name>
                    </hudson.plugins.git.BranchSpec>
                </branches>
                <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
                <submoduleCfg class="list"/>
                <extensions>
                    <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
                        <relativeTargetDir>assignment</relativeTargetDir>
                    </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
                </extensions>
            </hudson.plugins.git.GitSCM>
        </scms>
    </scm>
    <canRoam>true</canRoam>
    <disabled>false</disabled>
    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
    <triggers>
        <com.dabsquared.gitlabjenkins.GitLabPushTrigger plugin="gitlab-plugin@1.5.13">
            <spec/>
            <triggerOnPush>true</triggerOnPush>
            <triggerOnMergeRequest>false</triggerOnMergeRequest>
            <triggerOnPipelineEvent>false</triggerOnPipelineEvent>
            <triggerOnAcceptedMergeRequest>false</triggerOnAcceptedMergeRequest>
            <triggerOnClosedMergeRequest>false</triggerOnClosedMergeRequest>
            <triggerOnApprovedMergeRequest>false</triggerOnApprovedMergeRequest>
            <triggerOpenMergeRequestOnPush>never</triggerOpenMergeRequestOnPush>
            <triggerOnNoteRequest>false</triggerOnNoteRequest>
            <noteRegex>Jenkins please retry a build</noteRegex>
            <ciSkip>true</ciSkip>
            <skipWorkInProgressMergeRequest>true</skipWorkInProgressMergeRequest>
            <setBuildDescription>true</setBuildDescription>
            <branchFilterType>All</branchFilterType>
            <includeBranchesSpec/>
            <excludeBranchesSpec/>
            <sourceBranchRegex/>
            <targetBranchRegex/>
            <secretToken>{tokenHash}</secretToken>
            <pendingBuildName/>
            <cancelPendingBuildsOnUpdate>false</cancelPendingBuildsOnUpdate>
        </com.dabsquared.gitlabjenkins.GitLabPushTrigger>
    </triggers>
    <concurrentBuild>false</concurrentBuild>
    <builders>
        <hudson.tasks.Shell>
            <command>cd $WORKSPACE
echo "--------------------info--------------------"
python3.6 --version
pip3 --version
# Generic debug infos:
# whoami
# tree

echo "--------------------tests--------------------"
ls -la tests
echo "--------------------tests--------------------"
echo "--------------------assignment--------------------"
ls -la assignment
echo "--------------------assignment--------------------"

cd tests
REQ_FILE=requirements.txt
if [ -f "$REQ_FILE" ]; then
    pip3 install --user -r requirements.txt
else
    echo "$REQ_FILE does not exist"
fi
exit 0</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
            <command>#!/usr/bin/env bash

shadowFilePath="../tests/testUtils/c/shadow_exec.c"

foundIncludeDirs=`grep -m 1 'INCLUDEDIRS\s*=' assignment/Makefile`
echo "Include: $foundIncludeDirs"

foundSource=`grep -m 1 'SOURCE\s*=' assignment/Makefile`
foundSource="$foundSource $shadowFilePath"
echo "Source: $foundSource"

rm -f assignment/GNUmakefile
rm -f assignment/Makefile

cp -f tests/Makefile assignment/Makefile || exit 2
sed -i "s~INCLUDEDIRS\s*=.*~${foundIncludeDirs}~; s~SOURCE\s*=.*~${foundSource}~" assignment/Makefile</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
            <command>#!/bin/bash

# Actual build process:
cd tests

python3.6 Tests.py s
rm Tests.py
rm -rf ./tests

exit 0</command>
        </hudson.tasks.Shell>
    </builders>
    <publishers>
        <hudson.plugins.postbuildtask.PostbuildTask plugin="postbuild-task@1.8">
            <tasks>
                <hudson.plugins.postbuildtask.TaskProperties>
                    <logTexts>
                        <hudson.plugins.postbuildtask.LogProperties>
                            <logText>.*</logText>
                            <operator>AND</operator>
                        </hudson.plugins.postbuildtask.LogProperties>
                    </logTexts>
                    <EscalateStatus>false</EscalateStatus>
                    <RunIfJobSuccessful>false</RunIfJobSuccessful>
                    <script>sed -i 's/&#27;//g' test-reports/tests-results.xml&#13;
sed -i 's/&lt;skipped/&lt;error/g' test-reports/tests-results.xml&#13;
sed -i 's/&lt;\/skipped&gt;/&lt;\/error&gt;/g' test-reports/tests-results.xml&#13;
mv test-reports results</script>
                </hudson.plugins.postbuildtask.TaskProperties>
            </tasks>
        </hudson.plugins.postbuildtask.PostbuildTask>
        <de.tum.in.www1.jenkins.notifications.SendTestResultsNotificationPostBuildTask plugin="test-notifications@1.0">
            <credentialsId>secrettokenvalue</credentialsId>
            <notificationUrl>http://artemis.ase.in.tum.de/api/programming-exercises/new-result</notificationUrl>
        </de.tum.in.www1.jenkins.notifications.SendTestResultsNotificationPostBuildTask>
    </publishers>
    <buildWrappers>
        <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.38">
            <deleteDirs>false</deleteDirs>
            <cleanupParameter/>
            <externalDelete/>
            <disableDeferredWipeout>false</disableDeferredWipeout>
        </hudson.plugins.ws__cleanup.PreBuildCleanup>
        <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.3"/>
    </buildWrappers>
</project>